apply plugin: "java"
apply plugin: "war"
apply plugin: "jetty"
apply plugin: "idea"
apply plugin: "maven"

group = "com.smilebrands"
version = "1.0-SNAPSHOT"
archivesBaseName = "pomocy"

jettyRun.contextPath = "pomocy"

project.sourceCompatibility = 1.6
project.targetCompatibility = 1.6

configurations.all {
    exclude group: "commons-logging"
    exclude module: "slf4j-log4j12"
    exclude module: "servlet-api"
}

repositories {
    maven { url "http://curly/nexus/content/groups/public" }
//    maven { url "http://repo.springframework.org/milestone" }
//    maven { url "http://repo.springframework.org/release" }
//    mavenCentral()
//    mavenLocal()


}

dependencies {

    // Logging
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"
    compile "ch.qos.logback:logback-classic:$logbackVersion"

    // Commons
    compile "commons-lang:commons-lang:2.3"

    // Hibernate
    runtime "net.sf.ehcache:ehcache:1.2.4"
    compile "org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.1.Final"
    runtime "org.hibernate:hibernate-entitymanager:$hibernateVersion"
    runtime "javax.validation:validation-api:1.0.0.GA"
    compile "org.hibernate:hibernate-validator:4.2.0.Final"

    // Spring Framework
    runtime "org.springframework:spring-core:$springVersion"
    runtime "org.springframework:spring-aop:$springVersion"
    runtime "org.springframework:spring-asm:$springVersion"
    runtime "org.springframework:spring-beans:$springVersion"
    runtime "org.springframework:spring-context:$springVersion"
    runtime "org.springframework:spring-context-support:$springVersion"
    compile "org.springframework:spring-webmvc:$springVersion"
    runtime "org.springframework:spring-orm:$springVersion"
    runtime "org.springframework:spring-jdbc:$springVersion"
    runtime "org.springframework:spring-tx:$springVersion"

    // Spring Data
    compile "org.springframework.data:spring-data-commons-core:$sdCommonsVersion"
    compile("org.springframework.data:spring-data-jpa:1.0.3.RELEASE") {
        transitive = false
    }

    runtime "c3p0:c3p0:0.9.1.2"
    runtime "com.oracle:ojdbc5:11.1.0.7.0"

    compile "joda-time:joda-time:2.1"

    // Jackson Json
    compile "org.codehaus.jackson:jackson-core-asl:1.9.6"
    compile "org.codehaus.jackson:jackson-mapper-asl:1.9.6"



    testCompile group: 'junit', name: 'junit', version: '4.+'
    testCompile "org.springframework:spring-test:$springVersion"
    testRuntime "org.springframework.data:spring-data-commons-core:$sdCommonsVersion"
    testCompile("org.springframework.data:spring-data-jpa:1.0.3.RELEASE") {
        transitive = false
    }


}

task wrapper(type: Wrapper) { gradleVersion = "1.0-rc-3" }

idea {
  project {
    jdkName = "1.6"
    languageLevel = "1.6"
    ipr {
      withXml { xml ->
        xml.node.component.find { it.@name == "VcsDirectoryMappings" }.mapping.@vcs = "Git"
        xml.node.component.find { it.@name == "ProjectRootManager" }.output.@url = "file://\$PROJECT_DIR\$/build"
      }
    }
  }
}

task listJars << {
//    configurations.compile.each { File file -> println file.name }
    configurations.runtime.each { File file -> println file.name }
}

//test {
//    useJUnit() {
//        suiteXmlBuilder().suite(name: 'testing-testng') {
//            test (name : 'testing-testng', annotations : 'JDK', verbose:'1') {
//                classes([:]) {
//                    'class' (name: 'org.gradle.testng.UserImplTest') {
//                        methods([:]) {
//                            include(name: 'testOkFirstName')
//                        }
//                    }
//                }
//            }
//        }
//    }
//}

